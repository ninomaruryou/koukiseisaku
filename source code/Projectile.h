#pragma once

#include <directxmath.h>

#include "RenderContext.h"


class ProjectileManager;

class Projectile
{
public:
	//Projectile(){}
	Projectile(ProjectileManager* manager);
	virtual ~Projectile() {}

	//更新処理
	virtual void Updata(float elapsedTime) = 0;

	//描写処理
	virtual void Render(ID3D11DeviceContext* dc, float elapsed_time) = 0;

	//デバックプリミティブ描画
	virtual void DrawDebugPrimitive();

	//位置情報
	const DirectX::XMFLOAT3& GetPosition() const { return position; }

	//方向取得
	const DirectX::XMFLOAT3& GetDirection() const { return direction; }

	//スケール取得
	const DirectX::XMFLOAT3& GetScale() const { return scale; }

	//破棄
	void Destroy();

	//半径取得
	float GetRadiys() const { return radius; }

protected:
	//行列更新処理
	void UpdateTransform();


protected:
	DirectX::XMFLOAT3 position = { 0,0,0 };
	DirectX::XMFLOAT3 direction = { 0,0,1 }; //方向
	DirectX::XMFLOAT3 scale = { 1,1,1 };
	DirectX::XMFLOAT4X4 transform = { 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 };

	ProjectileManager* manager_ = nullptr;

	float radius = 0.5f;
};
